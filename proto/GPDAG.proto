syntax = "proto2";
package GP;
message Point {
    enum TYPE {
        FUNCTION = 0;
        INPUT = 1;
        PARALLEL = 2;
        OUTPUT = 4;
    }
    required TYPE type = 1 [default=INPUT];
    repeated Point input_variable = 2;
    enum PARALLELTPYE {
        MAP = 0;
        REDUCE = 1;
        PAL_FUNCTION = 2;
    }
    optional PARALLELTPYE parallel_type = 3;//For PARALLEL
    optional string content = 4;//FUNCTION: function name, Input: variable name, PARALLEL: parallel function
    repeated string output_names = 6;//For OUTPUT: variable names
}

message ADF {
    required string name = 1;
    repeated string output_types = 2;
    repeated string input_types = 3;
    optional Point realization = 4;
    optional uint32 limit_depth = 5;
}

message PointGroup {
    repeated Point formulas = 1;//Each point should be type of OUTPUT
    repeated ADF adfs = 2;
}

message FuncInfo {
    required string formula = 1;
    repeated double parameters = 2;
}
message ParallelType {
    required FuncInfo function = 1;
}

message DAGPoint {
    required uint32 id = 1;
    enum TYPE {
        FUNCTION = 0;
        TRANSMIT = 1;
        INPUT = 2;
        OUTPUT = 3;
    }
    required TYPE type = 2;
    optional uint32 position = 3;//For INPUT and OUTPUT
    optional string function = 4;//For FUNCTION
}

message DAG {
    repeated DAGPoint points = 1;
    message Connection {
        required uint32 srcPoint = 1;
        required uint32 dstPoint = 2;
        required uint32 get_src = 3;
        required uint32 put_dst = 4;
    }
    repeated Connection connections = 2;
}
